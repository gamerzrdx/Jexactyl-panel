#!/bin/bash
# ==================================================
#  Jexactyl Panel + Wings One-Click Installer
#  Unofficial Script | POWERED BY RDX
#  Supports: Ubuntu 20.04 / 22.04
# ==================================================

set -e

ASCII_ART="
█RRRRRRRRRRRRRRRRR   DDDDDDDDDDDDD       XXXXXXX       XXXXXXX
R::::::::::::::::R  D::::::::::::DDD    X:::::X       X:::::X
R::::::RRRRRR:::::R D:::::::::::::::DD  X:::::X       X:::::X
RR:::::R     R:::::RDDD:::::DDDDD:::::D X::::::X     X::::::X
  R::::R     R:::::R  D:::::D    D:::::DXXX:::::X   X:::::XXX
  R::::R     R:::::R  D:::::D     D:::::D  X:::::X X:::::X   
  R::::RRRRRR:::::R   D:::::D     D:::::D   X:::::X:::::X    
  R:::::::::::::RR    D:::::D     D:::::D    X:::::::::X     
  R::::RRRRRR:::::R   D:::::D     D:::::D    X:::::::::X     
  R::::R     R:::::R  D:::::D     D:::::D   X:::::X:::::X    
  R::::R     R:::::R  D:::::D     D:::::D  X:::::X X:::::X   
  R::::R     R:::::R  D:::::D    D:::::DXXX:::::X   X:::::XXX
RR:::::R     R:::::RDDD:::::DDDDD:::::D X::::::X     X::::::X
R::::::R     R:::::RD:::::::::::::::DD  X:::::X       X:::::X
R::::::R     R:::::RD::::::::::::DDD    X:::::X       X:::::X
RRRRRRRR     RRRRRRRDDDDDDDDDDDDD       XXXXXXX       XXXXXXX═╝
                 
                      POWERED BY RDX
"

# ----------------------------------------
# Header
# ----------------------------------------
header() {
    clear
    echo "$ASCII_ART"
    echo "Welcome to the Jexactyl One-Click Installer"
    echo "Unofficial clone of Pterodactyl Installer"
    echo "--------------------------------------------"
}

# ----------------------------------------
# Menu System
# ----------------------------------------
main_menu() {
    header
    echo "Choose an option:"
    echo "1) Install Panel Only"
    echo "2) Install Wings Only"
    echo "3) Install Panel + Wings (Full Install)"
    echo "4) Upgrade Panel"
    echo "5) Uninstall Everything"
    echo "6) Exit"
    echo
    read -p "Enter choice [1-6]: " choice

    case $choice in
        1) install_panel ;;
        2) install_wings ;;
        3) install_panel && install_wings ;;
        4) upgrade_panel ;;
        5) uninstall_all ;;
        6) exit 0 ;;
        *) echo "Invalid option!" && sleep 2 && main_menu ;;
    esac
}

# ----------------------------------------
# Dependency Installation
# ----------------------------------------
install_dependencies() {
    echo "[*] Installing system dependencies..."
    apt update -y && apt upgrade -y
    apt install -y curl wget unzip tar zip git software-properties-common \
    ca-certificates gnupg lsb-release ufw jq build-essential
}

# ----------------------------------------
# MariaDB Installation
# ----------------------------------------
install_mariadb() {
    echo "[*] Installing MariaDB..."
    apt install -y mariadb-server
    systemctl enable mariadb
    systemctl start mariadb
}

secure_mariadb() {
    echo "[*] Securing MariaDB..."
    mysql_secure_installation <<EOF
n
Y
Y
Y
Y
EOF
}

# ----------------------------------------
# PHP & Nginx Installation
# ----------------------------------------
install_php_nginx() {
    echo "[*] Installing PHP & Nginx..."
    add-apt-repository -y ppa:ondrej/php
    apt update -y
    apt install -y nginx php8.1 php8.1-cli php8.1-fpm php8.1-mysql \
    php8.1-gd php8.1-mbstring php8.1-curl php8.1-xml php8.1-bcmath php8.1-zip composer
    systemctl enable nginx
    systemctl start nginx
}

# ----------------------------------------
# Panel Installation
# ----------------------------------------
install_panel() {
    header
    echo "[1/7] Starting Jexactyl Panel Installation..."
    install_dependencies
    install_mariadb
    secure_mariadb
    install_php_nginx

    # Database credentials
    DB_NAME="jexactyl"
    DB_USER="jexactyluser"
    DB_PASS=$(openssl rand -hex 16)

    echo "[2/7] Setting up database..."
    mysql -u root -e "CREATE DATABASE ${DB_NAME};"
    mysql -u root -e "CREATE USER '${DB_USER}'@'localhost' IDENTIFIED BY '${DB_PASS}';"
    mysql -u root -e "GRANT ALL PRIVILEGES ON ${DB_NAME}.* TO '${DB_USER}'@'localhost';"
    mysql -u root -e "FLUSH PRIVILEGES;"

    echo "Database created:"
    echo "DB Name: $DB_NAME"
    echo "DB User: $DB_USER"
    echo "DB Pass: $DB_PASS"

    echo "[3/7] Downloading Jexactyl Panel..."
    mkdir -p /var/www/jexactyl
    cd /var/www/jexactyl
    curl -Lo panel.zip https://github.com/gamerzrdx/Jexactyl-panel/archive/refs/heads/main.zip
    unzip panel.zip
    mv Jexactyl-panel-main/* .
    rm -rf Jexactyl-panel-main panel.zip

    echo "[4/7] Installing PHP dependencies..."
    composer install --no-dev --optimize-autoloader

    chown -R www-data:www-data /var/www/jexactyl
    chmod -R 755 /var/www/jexactyl

    echo "[5/7] Configuring environment file..."
    cp .env.example .env
    sed -i "s|DB_DATABASE=.*|DB_DATABASE=${DB_NAME}|g" .env
    sed -i "s|DB_USERNAME=.*|DB_USERNAME=${DB_USER}|g" .env
    sed -i "s|DB_PASSWORD=.*|DB_PASSWORD=${DB_PASS}|g" .env

    php artisan key:generate --force
    php artisan migrate --seed --force

    echo "[6/7] Configuring Nginx..."
    cat > /etc/nginx/sites-available/jexactyl.conf <<EOF
server {
    listen 80;
    server_name _;
    root /var/www/jexactyl/public;
    index index.php;

    location / {
        try_files \$uri \$uri/ /index.php?\$query_string;
    }

    location ~ \.php\$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        include fastcgi_params;
    }
}
EOF

    ln -s /etc/nginx/sites-available/jexactyl.conf /etc/nginx/sites-enabled/
    nginx -t && systemctl restart nginx

    echo "[7/7] Firewall configuration..."
    ufw allow 80
    ufw allow 443
    ufw --force enable

    echo
    echo "$ASCII_ART"
    echo "Jexactyl Panel installed successfully!"
    echo "Visit: http://YOUR_SERVER_IP/"
    echo "Admin setup will be completed through the panel UI."
    echo
    echo "Database Info:"
    echo "DB User: $DB_USER"
    echo "DB Pass: $DB_PASS"
    echo "--------------------------------------------"
}

# ----------------------------------------
# Wings Installation
# ----------------------------------------
install_wings() {
    header
    echo "[*] Installing Docker and Wings..."
    curl -fsSL https://get.docker.com -o get-docker.sh
    bash get-docker.sh
    systemctl enable docker
    systemctl start docker

    mkdir -p /etc/pterodactyl
    curl -Lo /usr/local/bin/wings https://github.com/pterodactyl/wings/releases/latest/download/wings_linux_amd64
    chmod +x /usr/local/bin/wings

    echo "[*] Configuring Wings systemd service..."
    cat > /etc/systemd/system/wings.service <<EOF
[Unit]
Description=Pterodactyl Wings Daemon
After=docker.service
Requires=docker.service

[Service]
User=root
WorkingDirectory=/etc/pterodactyl
LimitNOFILE=4096
ExecStart=/usr/local/bin/wings
Restart=on-failure
StartLimitInterval=600

[Install]
WantedBy=multi-user.target
EOF

    systemctl enable wings
    systemctl start wings

    echo "Wings installed and running!"
    echo "Default Wings Port: 8080"
}

# ----------------------------------------
# Panel Upgrade
# ----------------------------------------
upgrade_panel() {
    header
    echo "[*] Upgrading Jexactyl Panel..."
    cd /var/www/jexactyl
    git pull origin main || echo "Warning: Git pull failed, using current files."
    composer install --no-dev --optimize-autoloader
    php artisan migrate --force
    systemctl restart nginx
    echo "Panel upgraded successfully!"
}

# ----------------------------------------
# Uninstall Everything
# ----------------------------------------
uninstall_all() {
    header
    echo "WARNING: This will completely remove Jexactyl Panel and Wings!"
    read -p "Are you sure? (y/n): " confirm
    if [[ "$confirm" != "y" ]]; then
        echo "Uninstall canceled."
        return
    fi

    systemctl stop wings
    systemctl disable wings
    rm -f /usr/local/bin/wings
    rm -rf /etc/pterodactyl

    systemctl stop nginx
    systemctl disable nginx
    rm -rf /var/www/jexactyl
    rm -f /etc/nginx/sites-available/jexactyl.conf
    rm -f /etc/nginx/sites-enabled/jexactyl.conf

    mysql -u root -e "DROP DATABASE jexactyl;"
    mysql -u root -e "DROP USER 'jexactyluser'@'localhost';"

    echo "All components uninstalled successfully."
}

# ----------------------------------------
# Start Script
# ----------------------------------------
main_menu
